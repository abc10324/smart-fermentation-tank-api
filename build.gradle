import java.text.SimpleDateFormat

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.github.node-gradle.node' version '7.0.1'
	id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.walnutek'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

def timestamp = new SimpleDateFormat("yyyyMMdd-HHmm").format(new Date())
def adminWorkdir = file("../smart-fermentation-tank")

node {
	download = true
	version = "18.14.2"
	pnpmVersion = "8.4.0"
	distBaseUrl = "https://nodejs.org/dist"
	workDir = file("${project.projectDir}/.gradle/nodejs")
	npmWorkDir = file("${project.projectDir}/.gradle/npm")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.codehaus.janino:janino:3.1.9'
	implementation 'de.siegmar:logback-gelf:4.0.2'
	implementation 'commons-codec:commons-codec:1.16.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'

	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs.add("-parameters")
}

if(adminWorkdir.exists()){
	task adminInstall(type: PnpmTask) {
		doFirst {
			project.node.nodeProjectDir = adminWorkdir
		}
		args = ["install"]
	}

	task adminBuild(type: PnpmTask) {
		dependsOn adminInstall
		args = ["build","--outDir","../${rootProject.name}/src/main/resources/static"]
	}

	adminBuild.shouldRunAfter clean
	compileJava.dependsOn clean, adminBuild
}

jibDockerBuild.dependsOn build

jib {
	container {
		environment = [TZ: "Asia/Taipei"]
		creationTime = "USE_CURRENT_TIMESTAMP"
	}
	from {
		image = "eclipse-temurin:17-jre-alpine"
	}
	to {
		image = "smart-fermentation-tank-app"
		tags = [timestamp]
	}
	containerizingMode = "packaged"
}
